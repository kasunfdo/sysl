name: Go-Windows
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:

  build-and-test-windows:
    name: Build Windows and test
    runs-on: windows-latest
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get dependencies
      run: go get -v -t -d ./...
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Initialize
      run: |
        git config --global core.autocrlf input
        go env
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test
      run: bash scripts/check-coverage.sh 80
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SYSL_PLANTUML: http://www.plantuml.com/plantuml

    - name: Build
      run: go build -v ./...
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install
      run: |
        export GOBIN=$PWD/bin
        mkdir $GOBIN
        GIT_TAG="$(echo $GITHUB_REF | cut -d'/' -f3)"
        GoOS=`go version | cut -d' ' -f4 | cut -d'/' -f1`
        GoArch=`go version | cut -d' ' -f4 | cut -d'/' -f2`
        scripts/build.sh install ${GIT_TAG:1} ${GITHUB_SHA} ${GoOS} ${GoArch} ${OSTYPE}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test installed
      run: scripts/test-gosysl.bat
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOPATH: .
        SYSL_PLANTUML: http://www.plantuml.com/plantuml
